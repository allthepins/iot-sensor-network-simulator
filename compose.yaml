services:
  simulator:
    build: .
    container_name: iot-simulator
    # Expose the metrics port to other containers on the same Docker network.
    # No need to map it to the host since only Prometheus needs to access it.
    expose:
      - "2112"
      - "6060" # Expose pprof port internally
    ports:
      - "6060:6060" # Map pprof port to host for local access
    # Connect host's terminal to the container to allow
    # `ctrl+c` (SIGINT) to be passed through.
    tty: true  # Attach a pseudo-TTY to the container.
    stdin_open: true  # Allow sending input to the container through standard input.
    # Enable log collection via Promtail
    logging:
      driver: json-file
      options:
        max-size: "10m"

  prometheus:
    image: prom/prometheus:v3.5.0
    container_name: prometheus
    # Map the host port 9090 to the container's port 9090 to access the Prometheus UI.
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    # A command-line flag to tell Prometheus where to find its configuration file.
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    image: grafana/grafana:12.1.1
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      # Mount provisioning files for datasources and dashboards
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      # Mount dashboard JSON file
      - ./grafana/provisioning/dashboards/:/etc/grafana/provisioning/dashboards/
    environment:
      # Set default admin user and password
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      # Ensure Prometheus is started before Grafana
      - prometheus

  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki-data:/loki

  promtail:
    image: grafana/promtail
    container_name: promtail
    volumes:
      - ./promtail/config.yaml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
